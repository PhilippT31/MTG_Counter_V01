#name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Define the jobs we want to run for this project
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
#    - name: configure
#      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
    - name: build
      run: build
    - name: test
      run: test

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: configure
#       run: ./configure
#     - name: make
#       run: make
#     - name: make check
#       run: make check
#     - name: make distcheck
#       run: make distcheck
#     - name: build
#       run: build
#     - name: test
#       run: test

#    - script: echo Hello, world!
#      displayName: 'Run a one-line script'
    
# When manually running the pipeline, you can select whether it
# succeeds or fails.
   # parameters:
  #  - name: succeed
  #    displayName: Succeed or fail
  #    type: boolean
  #    default: false
    
  #  trigger:
   # - main

#pool:
#  vmImage: ubuntu-latest

  # This malformed command causes the job to fail
  # Only run this command if the succeed variable is set to false
#- script: git clone malformed input
#  condition: eq(${{ parameters.succeed }}, false)

# This job creates a work item, and only runs if the previous job failed
#- job: ErrorHandler
#  dependsOn: Work
#  condition: failed()
#  steps: 
#  - bash: |
#      az boards work-item create \
#        --title "Build $(build.buildNumber) failed" \
#        --type bug \
#        --org $(System.TeamFoundationCollectionUri) \
#        --project $(System.TeamProject)
#    env: 
#      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
#    displayName: 'Create work item on failure'

